{"version":3,"file":"static/js/999.28ee70d8.chunk.js","mappings":"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","sources":["webpack://social-network/./src/component/Profile/ProfileStatus/ProfileStatus.module.css?ec2f","component/Profile/ProfileStatus/ProfileStatus.tsx","webpack://social-network/./src/component/Profile/ProfileDataForm/ProfileDataForm.module.css?5b2e","component/Profile/ProfileDataForm/ProfileDataForm.jsx","webpack://social-network/./src/component/Profile/ProfileInfo/ProfileInfo.module.css?7977","component/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social-network/./src/component/Profile/MyPosts/Post/Post.module.css?1230","component/Profile/MyPosts/Post/Post.jsx","webpack://social-network/./src/component/Profile/MyPosts/MyPosts.module.css?dc76","component/Profile/MyPosts/MyPosts.jsx","component/Profile/Profile.jsx","component/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"status_wrapper\":\"ProfileStatus_status_wrapper__qSOKr\"};","import { useState, useEffect, ChangeEvent } from \"react\";\n\nimport s from './ProfileStatus.module.css';\n\ntype PropsType = {\n    storeStatus: string,\n    updateStoreStatus: () => void,\n}\n\ntype StateType = {\n\n}\n\nconst ProfileStatus: PropsType = ({storeStatus, updateStoreStatus, isOwner}) => {\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(storeStatus);\n\n    const activeEditMode = () => setEditMode(true);\n\n    const disableEditMode = () => {\n        setEditMode(false);\n        updateStoreStatus(status);\n    };\n\n    const onChangeStatus = (e: ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    useEffect(() => {\n        setStatus(storeStatus);\n    }, [storeStatus])\n\n    return (\n        <li className={s.status_wrapper}>\n            {!editMode ?\n                <span onClick={isOwner ? activeEditMode : null}>{storeStatus ? storeStatus : isOwner ? 'Set your status' : 'No status'}</span> :\n                <input onChange={onChangeStatus} autoFocus onBlur={disableEditMode} value={status} />\n            }\n        </li>\n    )\n}\n\nexport default ProfileStatus;","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"ProfileDataForm_field__f99-M\",\"items_wrapper\":\"ProfileDataForm_items_wrapper__25jgS\",\"item\":\"ProfileDataForm_item__lthpO\",\"title\":\"ProfileDataForm_title__hFAh7\",\"form\":\"ProfileDataForm_form__9TAY6\",\"save\":\"ProfileDataForm_save__y6lbH\"};","import { useForm } from \"react-hook-form\";\n\nimport s from './ProfileDataForm.module.css';\n\nconst ProfileDataForm = ({profile, onSubmit}) => {\n    const {register, handleSubmit, formState: {errors}} = useForm();\n\n    return (\n        <>\n        <h3 className={s.title}>Edit profile info</h3>\n        <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n            <ul className={s.items_wrapper}>\n                <li className={s.item}>\n                    Full name:\n                    <input\n                    className={s.field}\n                        {...register('fullName')}\n                        type='text'\n                        placeholder='Full name'\n                        autocomplete=\"off\"\n                    />\n                </li>\n                <li className={s.item}>About me:\n                    <textarea\n                    className={s.field}\n                        {...register('aboutMe')}\n                        type='text'\n                        placeholder='About me'\n                        autocomplete=\"off\"\n                    />\n                </li>\n                <li className={s.item}>Looking for a job:\n                    <input\n                        {...register('lookingForAJob')}\n                        type='checkbox'\n                    />\n                </li>\n                <li className={s.item}>My professional skills:\n                     <textarea\n                     className={s.field}\n                        {...register('lookingForAJobDescription')}\n                        type='text'\n                        placeholder='My professional skills'\n                        autocomplete=\"off\"\n                    />\n                </li>\n                {Object.keys(profile.contacts).map(key => {\n                    return <li className={s.item} key={key}>{key}:\n                    <input\n                    className={s.field}\n                        {...register(`contacts.${key}`)}\n                        type='text'\n                        placeholder={key}\n                        autocomplete=\"off\"\n                    />\n                    {/* {profile.contacts[key]} */}\n                    </li>\n                })}\n            </ul>\n            <button className={s.save} type='submit'>Save</button>\n        </form>\n        </>\n    )\n}\n\nexport default ProfileDataForm;","// extracted by mini-css-extract-plugin\nexport default {\"hero_block\":\"ProfileInfo_hero_block__BvzZr\",\"main_info\":\"ProfileInfo_main_info__+Lp56\",\"change_input\":\"ProfileInfo_change_input__5O51o\",\"main_info_profile\":\"ProfileInfo_main_info_profile__f7XbZ\",\"contacts\":\"ProfileInfo_contacts__VdrRc\",\"edit_info\":\"ProfileInfo_edit_info__fnv+n\"};","import { useState } from 'react';\n\nimport Loader from '../../Commons/Loader/Loader';\nimport ProfileStatus from '../ProfileStatus/ProfileStatus.tsx';\nimport ProfileDataForm from '../ProfileDataForm/ProfileDataForm';\n\nimport { ProfileType } from '../../../types/types';\n\nimport s from './ProfileInfo.module.css';\n\ntype PropsType = {\n  profile: ProfileType,\n  setStatus: () => void,\n  status: string,\n  isOwner: boolean,\n  savePhotos: (arg0:string) => void,\n  saveProfileInfo: (arg0:Object, arg1:number) => void,\n  userId: number\n}\n\nconst ProfileInfo: React.FC<PropsType> = ({profile, setStatus, status, isOwner, savePhotos, saveProfileInfo, userId}) => {\n  const [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Loader />\n  }\n\n  const onSaveNewAvatarPhoto = (e: any) => {\n    if (e.target.files.length) {\n      savePhotos(e.target.files[0]);\n    }\n  }\n\n  const onSubmit = (formData: any) => {\n    saveProfileInfo(formData, userId);\n    setEditMode(false);\n  }\n\n  const withOutAvatar =  'https://static.prinseps.com/media/uploads/cryptopunk6278.png';\n\n  return (\n      <>\n      {editMode ? <ProfileDataForm profile={profile} onSubmit={onSubmit} /> :\n      <div className={s.content}>\n      <div className={s.hero_block}>\n        {/* <img src='https://www.metoffice.gov.uk/binaries/content/gallery/metofficegovuk/hero-images/advice/maps-satellite-images/satellite-image-of-globe.jpg' /> */}\n      </div>\n      <div className={s.main_info}>\n        <picture>\n          <img src={profile.photos.large ? profile.photos.large : withOutAvatar} alt={profile.fullName} />\n          {isOwner && <input className={s.change_input} type=\"file\" onChange={onSaveNewAvatarPhoto} />}\n        </picture>\n        <div className={s.main_info_profile}>\n          <h3>{profile.fullName}</h3>\n          <ProfileStatus updateStoreStatus={setStatus} storeStatus={status} isOwner={isOwner} />\n        </div>\n        <div className={s.contacts}>\n          <ProfileData editProfileInfo={() => setEditMode(true)} profile={profile} isOwner={isOwner} />\n        </div>\n      </div>\n    </div>\n    }\n    </>\n  );\n}\n\nconst ProfileData = ({profile, editProfileInfo, isOwner}) => {\n  return (\n    <>\n        <ul>\n          <li>About me: {profile.aboutMe}</li>\n          { profile.lookingForAJob && <li>Looking for a job</li>}\n          {profile.lookingForAJob && <li>Job Description: {profile.lookingForAJobDescription}</li>}\n          {Object.keys(profile.contacts).map(key => {\n            if (profile.contacts[key]) return <li key={key}>{key}: {profile.contacts[key]}</li>;\n          })}\n        </ul>\n        {isOwner && <button className={s.edit_info} onClick={editProfileInfo}>Edit</button>}\n    </>\n  )\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__Evse1\"};","import s from './Post.module.css';\n\nconst Post = ({ava, text, likes, id, onDelete}) => {\n    return (\n        <li className={s.post}>\n            <img src={ava} alt={id} />\n            <div>\n                <p>{text}</p>\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Ei-like.svg/1200px-Ei-like.svg.png\" />\n                <span>{likes}</span>\n                <button onClick={() => onDelete(id)}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path d=\"M 39.486328 6.9785156 A 1.50015 1.50015 0 0 0 38.439453 7.4394531 L 24 21.878906 L 9.5605469 7.4394531 A 1.50015 1.50015 0 0 0 8.484375 6.984375 A 1.50015 1.50015 0 0 0 7.4394531 9.5605469 L 21.878906 24 L 7.4394531 38.439453 A 1.50015 1.50015 0 1 0 9.5605469 40.560547 L 24 26.121094 L 38.439453 40.560547 A 1.50015 1.50015 0 1 0 40.560547 38.439453 L 26.121094 24 L 40.560547 9.5605469 A 1.50015 1.50015 0 0 0 39.486328 6.9785156 z\"/></svg>\n                </button>\n            </div>\n\n        </li>\n    );\n}\n\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"posts_form\":\"MyPosts_posts_form__GM95t\",\"posts\":\"MyPosts_posts__F024C\",\"error\":\"MyPosts_error__Lq7n0\",\"errorMessage\":\"MyPosts_errorMessage__49i1B\"};","import { useForm } from \"react-hook-form\";\n\nimport Post from './Post/Post';\n\nimport s from './MyPosts.module.css';\n\nconst MyPosts = ({profile, posts, onCreatePost, onDeletePost}) => {\n\n    const onSubmit = (data) => {\n        onCreatePost(data);\n    }\n\n    const onDelete = (id) => {\n        onDeletePost(id);\n    }\n\n    const elements = posts.map(({postText, likes, id}) => <Post key={id} ava={profile?.photos.small} text={postText} likes={likes} onDelete={onDelete} id={id} />);\n\n    return (\n        <>\n            <div className={s.posts_form}>\n                <h2>My posts</h2>\n                <PostForm \n                    onSubmit={onSubmit}\n                />\n            </div>\n            <ul className={s.posts}>\n                {elements}\n            </ul>\n        </>\n    );\n}\n\nconst PostForm = ({onSubmit}) => {\n    const {register, handleSubmit, formState: {errors}} = useForm();\n    \n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input className={errors.postText ? s.error : ''} {...register('postText', {required: \"can't send empty post\", minLength: {value: 1, message: 'Min length 1 symbol'}, maxLength: {value: 100, message: 'Max length message 100 symbols'}})} type=\"text\" placeholder='Your news...'></input>\n            {errors.postText && <span className={s.errorMessage}>{errors.postText.message}</span>}\n            <button type='submit'>Send</button>\n        </form>\n    );\n};\n\nexport default MyPosts;","import { memo } from 'react';\n\nimport ProfileInfo from './ProfileInfo/ProfileInfo.tsx';\nimport MyPosts from './MyPosts/MyPosts.jsx';\nimport Loader from '../Commons/Loader/Loader';\n\nconst Profile = memo(({profile, posts, onCreatePost, onDeletePost, setProfileStatus, status, isOwner, savePhotos, saveProfileInfo, userId}) => {\n  if (!profile) {\n    return <Loader />\n  }  \n  \n  return (\n      <div>\n        <ProfileInfo\n          profile={profile}\n          setStatus={setProfileStatus}\n          status={status}\n          isOwner={isOwner}\n          savePhotos={savePhotos}\n          saveProfileInfo={saveProfileInfo}\n          userId={userId}\n        />\n        {isOwner && \n          <MyPosts\n            posts={posts}\n            profile={profile}\n            onCreatePost={onCreatePost}\n            onDeletePost={onDeletePost}\n          />\n        }\n      </div>\n    );\n})\n\nexport default Profile;","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\n\nimport { actions, getUserProfileThunkCreator, getProfileStatusThunkCreator, setProfileStatusThunkCreator, savePhotosThunkCreator, saveProfileInfoThunkCreator } from '../../redux/profileReducer.tsx';\n\nimport Profile from './Profile';\nimport WithAuthRedirect from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nconst ProfileApiContainer = (props) => {\n    const refreshProfile = () => {\n        let userId = props.router.params.userId;\n\n        if (!userId)\n        {\n            if (props.isAuth) {\n                userId = props.userId;\n            }\n        }\n\n        getProfile(userId);\n        getStatus(userId);\n    }\n\n    const getProfile = (userId) => {\n        props.getUserProfile(userId)\n    }\n\n    const getStatus = (userId) => {\n        props.getProfileStatus(userId)\n    }\n\n    useEffect(() => {\n        refreshProfile();\n        // eslint-disable-next-line\n    }, [props.router.params.userId])\n\n    return (\n        <>\n            <Profile {...props} profile={props.profile} userId={props.userId} saveProfileInfo={props.saveProfileInfo} savePhotos={props.savePhotos} isOwner={!props.router.params.userId} />\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.postsData,\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        isAuth: state.auth.isAuth,\n        userId: state.auth.userId,\n    }\n}\n\nconst AuthRedirectContainer = WithAuthRedirect(ProfileApiContainer);\n\nconst WithUrlRouteProfileComponent = (props) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    return <AuthRedirectContainer {...props} router={{ location, navigate, params }} />;\n}\n\nexport default compose(\n        connect(mapStateToProps, {\n        onCreatePost: actions.addPostActionCreator,\n        onDeletePost: actions.deletePostActionCreator,\n        getUserProfile: getUserProfileThunkCreator,\n        getProfileStatus: getProfileStatusThunkCreator,\n        setProfileStatus: setProfileStatusThunkCreator,\n        savePhotos: savePhotosThunkCreator,\n        saveProfileInfo: saveProfileInfoThunkCreator,\n    })\n)(WithUrlRouteProfileComponent);","import { connect } from \"react-redux\"\nimport { Navigate } from \"react-router-dom\"\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\nconst WithAuthRedirect = (Component) => {\n    const RedirectContainer = (props) => {\n        return (\n            <>\n                {!props.isAuth ? <Navigate to=\"/login\" /> : <Component {...props} />}\n            </>\n        )\n    }\n\n    const ConnectRedirectContainer = connect(mapStateToProps)(RedirectContainer);\n\n    return ConnectRedirectContainer;\n}\n\nexport default WithAuthRedirect"],"names":["storeStatus","updateStoreStatus","isOwner","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onChange","e","currentTarget","value","autoFocus","onBlur","onClick","profile","onSubmit","useForm","register","handleSubmit","formState","errors","type","placeholder","autocomplete","Object","keys","contacts","map","key","ProfileData","editProfileInfo","aboutMe","lookingForAJob","lookingForAJobDescription","savePhotos","saveProfileInfo","userId","Loader","formData","src","photos","large","alt","fullName","target","files","length","ava","text","likes","id","onDelete","xmlns","viewBox","width","height","d","PostForm","postText","required","minLength","message","maxLength","posts","onCreatePost","onDeletePost","elements","small","data","memo","setProfileStatus","AuthRedirectContainer","WithAuthRedirect","props","getProfile","getUserProfile","getStatus","getProfileStatus","router","params","isAuth","refreshProfile","compose","connect","state","profilePage","postsData","auth","actions","getUserProfileThunkCreator","getProfileStatusThunkCreator","setProfileStatusThunkCreator","savePhotosThunkCreator","saveProfileInfoThunkCreator","location","useLocation","navigate","useNavigate","useParams","mapStateToProps","Component","to"],"sourceRoot":""}